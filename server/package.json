{
  "name": "server",
  "version": "1.0.5",
  "description": "",
  "author": "iamendor",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix -c ../.eslintrc.js",
    "docs:generate": "node_modules/.bin/graphql-markdown http://localhost:3000/graphql > DOCS.md",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json --runInBand",
    "/": "Migrate development",
    "migrate:main": "prisma migrate dev --schema ./prisma/main/schema.prisma",
    "migrate:static": "prisma migrate dev --schema ./prisma/static/schema.prisma",
    "migrate:analytics": "prisma migrate dev --schema ./prisma/analytics/schema.prisma",
    "//": "Generate Prisma libraries",
    "generate:main": "prisma generate --schema ./prisma/main/schema.prisma",
    "generate:static": "prisma generate --schema ./prisma/static/schema.prisma",
    "generate:analytics": "prisma generate --schema ./prisma/analytics/schema.prisma",
    "prisma:generate": "npm run generate:main && npm run generate:static && npm run generate:analytics",
    "///": "Deploy database to production",
    "database:deploy:static": "prisma migrate deploy --schema ./prisma/static/schema.prisma",
    "database:deploy:main": "prisma migrate deploy --schema ./prisma/main/schema.prisma",
    "database:deploy:analytics": "prisma migrate deploy --schema ./prisma/analytics/schema.prisma",
    "database:deploy": "npm run database:deploy:static && npm run database:deploy:main && npm run database:deploy:analytics"
  },
  "dependencies": {
    "@apollo/server": "^4.10.0",
    "@nestjs-modules/ioredis": "^2.0.1",
    "@nestjs/apollo": "^12.1.0",
    "@nestjs/cache-manager": "^2.2.1",
    "@nestjs/common": "^10.3.3",
    "@nestjs/config": "^3.2.0",
    "@nestjs/core": "^10.3.3",
    "@nestjs/graphql": "^12.1.1",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.5",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.3.3",
    "@nestjs/schedule": "^4.0.1",
    "@prisma/client": "^5.10.2",
    "bcrypt": "^5.1.1",
    "cache-manager": "^5.4.0",
    "class-transformer": "^0.5.1",
    "dotenv": "^16.4.5",
    "graphql": "^16.8.1",
    "graphql-subscriptions": "^2.0.0",
    "graphql-ws": "^5.15.0",
    "ioredis": "^5.3.2",
    "joi": "^17.12.2",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.14",
    "rimraf": "^5.0.5",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.3.2",
    "@nestjs/schematics": "^10.1.1",
    "@nestjs/testing": "^10.3.3",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^4.17.21",
    "@types/jest": "29.5.12",
    "@types/node": "^20.11.19",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "graphql-markdown": "^7.0.0",
    "jest": "29.7.0",
    "prettier": "^3.2.5",
    "prisma": "^5.10.2",
    "prisma-nestjs-graphql": "^20.0.2",
    "source-map-support": "^0.5.21",
    "spectaql": "^2.3.1",
    "supertest": "^6.3.4",
    "ts-jest": "29.1.2",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "4.2.0",
    "typescript": "^5.3.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}